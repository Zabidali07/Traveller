{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zabid\\\\NS\\\\blogsMajorProject\\\\client\\\\src\\\\components\\\\MyPosts.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Layout from \"./Layout\";\nimport { useSelector } from \"react-redux\";\n\nconst MyPosts = () => {\n  const [myPosts, setMyPosts] = useState([]);\n  const authors = useSelector(state => state);\n  const postedByEmail = localStorage.getItem(\"userEmailInLocalStorage\");\n  useEffect(() => {\n    axios.post(\"/get-post-of-user\", {\n      postedByEmail\n    }).then(res => {\n      console.log(\"Fetching each user posts\", authors, res);\n      setMyPosts(res.data.result);\n    }).catch(err => {\n      console.log(\"Error in fetching from database\", postedByEmail, err);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"MY Posts \", authors.name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, myPosts.map(post => {\n    const path = \"http://localhost:8000/uploads/\" + post.imagePath.substr(15);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-4 custom-article-form\",\n      key: post._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: path,\n      className: \"card-img img-fluid\",\n      alt: \"lol\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }\n    }, post.title), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }\n    }, post.description, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, post.markdown), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, \"posted by: \", post.author)))));\n  })));\n};\n\nexport default MyPosts;","map":{"version":3,"sources":["C:/Users/Zabid/NS/blogsMajorProject/client/src/components/MyPosts.js"],"names":["React","useState","useEffect","axios","Layout","useSelector","MyPosts","myPosts","setMyPosts","authors","state","postedByEmail","localStorage","getItem","post","then","res","console","log","data","result","catch","err","name","map","path","imagePath","substr","_id","title","description","markdown","author"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMQ,OAAO,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAZ,CAA3B;AACA,QAAMC,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,yBAArB,CAAtB;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CACFW,IADH,CACQ,mBADR,EAC6B;AACzBH,MAAAA;AADyB,KAD7B,EAIGI,IAJH,CAISC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCT,OAAxC,EAAiDO,GAAjD;AACAR,MAAAA,UAAU,CAACQ,GAAG,CAACG,IAAJ,CAASC,MAAV,CAAV;AACD,KAPH,EAQGC,KARH,CAQUC,GAAD,IAAS;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CP,aAA/C,EAA8DW,GAA9D;AACD,KAVH;AAWD,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcb,OAAO,CAACc,IAAtB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,OAAO,CAACiB,GAAR,CAAaV,IAAD,IAAU;AACrB,UAAMW,IAAI,GACR,mCAAmCX,IAAI,CAACY,SAAL,CAAeC,MAAf,CAAsB,EAAtB,CADrC;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAA+C,MAAA,GAAG,EAAEb,IAAI,CAACc,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEH,IAAV;AAAgB,MAAA,SAAS,EAAC,oBAA1B;AAA+C,MAAA,GAAG,EAAC,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BX,IAAI,CAACe,KAAlC,CADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGf,IAAI,CAACgB,WADR,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIhB,IAAI,CAACiB,QAAT,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAejB,IAAI,CAACkB,MAApB,CAHF,CAFF,CAJF,CADF,CADF;AAiBD,GApBA,CADH,CAFF,CADF;AA4BD,CA9CD;;AAgDA,eAAe1B,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Layout from \"./Layout\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst MyPosts = () => {\r\n  const [myPosts, setMyPosts] = useState([]);\r\n  const authors = useSelector((state) => state);\r\n  const postedByEmail = localStorage.getItem(\"userEmailInLocalStorage\");\r\n  useEffect(() => {\r\n    axios\r\n      .post(\"/get-post-of-user\", {\r\n        postedByEmail,\r\n      })\r\n      .then((res) => {\r\n        console.log(\"Fetching each user posts\", authors, res);\r\n        setMyPosts(res.data.result);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error in fetching from database\", postedByEmail, err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Layout>\r\n      <h1>MY Posts {authors.name}</h1>\r\n      <div>\r\n        {myPosts.map((post) => {\r\n          const path =\r\n            \"http://localhost:8000/uploads/\" + post.imagePath.substr(15);\r\n          return (\r\n            <div className=\"card mt-4 custom-article-form\" key={post._id}>\r\n              <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                  <img src={path} className=\"card-img img-fluid\" alt=\"lol\" />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                  <div className=\"card-title\">{post.title}</div>\r\n                  <div className=\"card-body\">\r\n                    {post.description}\r\n                    <p>{post.markdown}</p>\r\n                    <p>posted by: {post.author}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n"]},"metadata":{},"sourceType":"module"}