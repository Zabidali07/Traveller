{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zabid\\\\NS\\\\blogsMajorProject\\\\client\\\\src\\\\components\\\\Fullpage.js\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nconst Fullpage = ({\n  match\n}) => {\n  let path = \"\";\n  let [article, setArticle] = useState([]);\n  const [keys, setKeys] = useState({\n    author: \"\",\n    cusineImagesPath: [],\n    cusineImagesDescription: [],\n    visitedPlacesImagesPath: [],\n    visitedPlacesImagesDescription: [],\n    title: \"\",\n    description: \"\",\n    markdown: \"\",\n    imagePath: \"\",\n    postedByEmail: \"\"\n  });\n  const id = match.params.userToken;\n  useEffect(() => {\n    axios.post(\"http://localhost:8000/blogs/get-one-article\", {\n      id\n    }).then(res => {\n      console.log(\"fetching posts from server SUCCESS\", res);\n      setArticle(res.data.result);\n      setKeys({ ...keys,\n        author: res.data.result.author,\n        cusineImagesPath: res.data.result.cusineImagesPath,\n        cusineImagesDescription: res.data.result.cusineImagesDescription,\n        visitedPlacesImagesPath: res.data.result.visitedPlacesImagesPath,\n        visitedPlacesImagesDescription: res.data.result.visitedPlacesImagesDescription,\n        title: res.data.result.title,\n        description: res.data.result.description,\n        markdown: res.data.result.markdown,\n        imagePath: res.data.result.imagePath,\n        postedByEmail: res.data.result.postedByEmail\n      });\n    }).catch(err => {\n      if (err) {\n        console.log(\"Error in fetching from database\", err);\n      }\n    });\n  }, []);\n  const {\n    author,\n    cusineImagesPath,\n    cusineImagesDescription,\n    visitedPlacesImagesPath,\n    visitedPlacesImagesDescription,\n    title,\n    description,\n    markdown,\n    imagePath,\n    postedByEmail\n  } = keys;\n  path = \"http://localhost:8000/uploads/\" + String(article.imagePath).substr(15);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Fullpage;","map":{"version":3,"sources":["C:/Users/Zabid/NS/blogsMajorProject/client/src/components/Fullpage.js"],"names":["React","useEffect","useState","useCallback","axios","useSelector","Fullpage","match","path","article","setArticle","keys","setKeys","author","cusineImagesPath","cusineImagesDescription","visitedPlacesImagesPath","visitedPlacesImagesDescription","title","description","markdown","imagePath","postedByEmail","id","params","userToken","post","then","res","console","log","data","result","catch","err","String","substr"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Fullpage = ({ match }) => {\r\n  let path = \"\";\r\n  let [article, setArticle] = useState([]);\r\n\r\n  const [keys, setKeys] = useState({\r\n    author: \"\",\r\n    cusineImagesPath: [],\r\n    cusineImagesDescription: [],\r\n    visitedPlacesImagesPath: [],\r\n    visitedPlacesImagesDescription: [],\r\n    title: \"\",\r\n    description: \"\",\r\n    markdown: \"\",\r\n    imagePath: \"\",\r\n    postedByEmail: \"\",\r\n  });\r\n\r\n  const id = match.params.userToken;\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\"http://localhost:8000/blogs/get-one-article\", { id })\r\n      .then((res) => {\r\n        console.log(\"fetching posts from server SUCCESS\", res);\r\n        setArticle(res.data.result);\r\n        setKeys({\r\n          ...keys,\r\n          author: res.data.result.author,\r\n          cusineImagesPath: res.data.result.cusineImagesPath,\r\n          cusineImagesDescription: res.data.result.cusineImagesDescription,\r\n          visitedPlacesImagesPath: res.data.result.visitedPlacesImagesPath,\r\n          visitedPlacesImagesDescription:\r\n            res.data.result.visitedPlacesImagesDescription,\r\n          title: res.data.result.title,\r\n          description: res.data.result.description,\r\n          markdown: res.data.result.markdown,\r\n          imagePath: res.data.result.imagePath,\r\n          postedByEmail: res.data.result.postedByEmail,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        if (err) {\r\n          console.log(\"Error in fetching from database\", err);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const {\r\n    author,\r\n    cusineImagesPath,\r\n    cusineImagesDescription,\r\n    visitedPlacesImagesPath,\r\n    visitedPlacesImagesDescription,\r\n    title,\r\n    description,\r\n    markdown,\r\n    imagePath,\r\n    postedByEmail,\r\n  } = keys;\r\n  path =\r\n    \"http://localhost:8000/uploads/\" + String(article.imagePath).substr(15);\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"col\">\r\n        <div className=\"row-md-4\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fullpage;\r\n"]},"metadata":{},"sourceType":"module"}