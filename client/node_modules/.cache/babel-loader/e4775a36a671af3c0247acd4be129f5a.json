{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zabid\\\\NS\\\\blogsMajorProject\\\\client\\\\src\\\\components\\\\Reset.js\";\nimport React, { useState, useEffect } from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport Layout from \"./Layout\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst Reset = ({\n  match\n}) => {\n  // props.match from react router dom\n  const [values, setValues] = useState({\n    name: \"\",\n    token: \"\",\n    newPassword: \"\",\n    buttonText: \"Reset password\"\n  });\n  useEffect(() => {\n    let token = match.params.token;\n    let {\n      name\n    } = jwt.decode(token); // console.log(name);\n\n    if (token) {\n      setValues(v => ({ ...v,\n        name,\n        token\n      }));\n    }\n  }, [match.params.token]);\n  const {\n    name,\n    token,\n    newPassword,\n    buttonText\n  } = values;\n\n  const handleChange = event => {\n    setValues({ ...values,\n      newPassword: event.target.value\n    });\n  };\n\n  const clickSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values,\n      buttonText: \"Submitting\"\n    });\n    axios.post(\"http://localhost:8000/blogs/reset-password\", {\n      newPassword,\n      resetPasswordLink: token\n    }).then(response => {\n      console.log(\"RESET PASSWORD SUCCESS\", response);\n      toast.success(response.data.message);\n      setValues({ ...values,\n        buttonText: \"Done\"\n      });\n    }).catch(error => {\n      console.log(\"RESET PASSWORD ERROR\", error.response.data);\n      toast.error(error.response.data.error);\n      setValues({ ...values,\n        buttonText: \"Reset password\"\n      });\n    });\n  };\n\n  const passwordResetForm = () => /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"New Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    value: newPassword,\n    type: \"password\",\n    className: \"form-control\",\n    placeholder: \"Type new password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: clickSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, buttonText)));\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"p-5 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Hey \", name, \", Type your new password\"), passwordResetForm()));\n};\n\nexport default Reset;","map":{"version":3,"sources":["C:/Users/Zabid/NS/blogsMajorProject/client/src/components/Reset.js"],"names":["React","useState","useEffect","jwt","Layout","axios","ToastContainer","toast","Reset","match","values","setValues","name","token","newPassword","buttonText","params","decode","v","handleChange","event","target","value","clickSubmit","preventDefault","post","resetPasswordLink","then","response","console","log","success","data","message","catch","error","passwordResetForm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport Layout from \"./Layout\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nconst Reset = ({ match }) => {\r\n  // props.match from react router dom\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    token: \"\",\r\n    newPassword: \"\",\r\n    buttonText: \"Reset password\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    let token = match.params.token;\r\n    let { name } = jwt.decode(token);\r\n    // console.log(name);\r\n    if (token) {\r\n      setValues((v) => ({ ...v, name, token }));\r\n    }\r\n  }, [match.params.token]);\r\n\r\n  const { name, token, newPassword, buttonText } = values;\r\n\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, newPassword: event.target.value });\r\n  };\r\n\r\n  const clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, buttonText: \"Submitting\" });\r\n    axios\r\n      .post(\"http://localhost:8000/blogs/reset-password\", {\r\n        newPassword,\r\n        resetPasswordLink: token,\r\n      })\r\n      .then((response) => {\r\n        console.log(\"RESET PASSWORD SUCCESS\", response);\r\n        toast.success(response.data.message);\r\n        setValues({ ...values, buttonText: \"Done\" });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"RESET PASSWORD ERROR\", error.response.data);\r\n        toast.error(error.response.data.error);\r\n        setValues({ ...values, buttonText: \"Reset password\" });\r\n      });\r\n  };\r\n\r\n  const passwordResetForm = () => (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">New Password</label>\r\n        <input\r\n          onChange={handleChange}\r\n          value={newPassword}\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          placeholder=\"Type new password\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <button className=\"btn btn-primary\" onClick={clickSubmit}>\r\n          {buttonText}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"col-md-6 offset-md-3\">\r\n        <ToastContainer />\r\n        <h1 className=\"p-5 text-center\">Hey {name}, Type your new password</h1>\r\n        {passwordResetForm()}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Reset;\r\n"]},"metadata":{},"sourceType":"module"}